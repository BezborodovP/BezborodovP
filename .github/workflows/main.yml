name: Main

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       versions:
         - IMAGE: wiremock/wiremock:main
           CONTEXT: .
         - IMAGE: wiremock/wiremock:main-alpine
           CONTEXT: alpine
    steps:

    - name: Checkout sources
      uses: actions/checkout@main

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: wiremock
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Wiremock Docker image
      run: docker build -t ${{ matrix.versions.IMAGE }} ${{ matrix.versions.CONTEXT }}

    - name: Test Wiremock Docker image
      run: |
        # default
        docker container run -d --name test -p 8080:8080 ${{ matrix.versions.IMAGE }}
        timeout 10 bash -c 'while ! curl --fail http://localhost:8080/__admin/; do sleep 1; done'
        docker container rm -f test

        # args
        docker container run -d --name test -p 8443:8443 ${{ matrix.versions.IMAGE }} --https-port 8443
        timeout 10 bash -c 'while ! curl --fail --insecure https://localhost:8443/__admin/; do sleep 1; done'
        docker container rm -f test

        if [ "${{ matrix.versions.CONTEXT }}" != "alpine" ]
        then
          # helloworld
          docker build -t wiremock-hello samples/hello
          docker container run -d --name test -p 8080:8080 wiremock-hello
          timeout 10 bash -c 'while ! curl --fail http://localhost:8080/hello; do sleep 1; done'
          docker container rm -f test

          # random
          docker build -t wiremock-random samples/random
          docker container run -d --name test -p 8080:8080 wiremock-random
          timeout 10 bash -c 'while ! curl --fail http://localhost:8080/random; do sleep 1; done'
          docker container rm -f test
        fi

    - name: Push Wiremock Docker image to Docker HUB
      run: docker push ${{ matrix.versions.IMAGE }}
