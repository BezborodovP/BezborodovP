name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       versions:
         - FROM_IMAGE: rodolpheche/wiremock:nightly
           TO_IMAGE: rodolpheche/wiremock:latest
         - FROM_IMAGE: rodolpheche/wiremock:nightly
           TO_IMAGE: rodolpheche/wiremock:${{ github.event.inputs.version }}
         - FROM_IMAGE: rodolpheche/wiremock:nightly-alpine
           TO_IMAGE: rodolpheche/wiremock:latest-alpine
         - FROM_IMAGE: rodolpheche/wiremock:nightly-alpine
           TO_IMAGE: rodolpheche/wiremock:${{ github.event.inputs.version }}-alpine
    steps:

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Release Wiremock Docker image
      run: |
        docker pull ${{ matrix.versions.FROM_IMAGE }}
        docker tag ${{ matrix.versions.FROM_IMAGE }} ${{ matrix.versions.TO_IMAGE }}
        docker push ${{ matrix.versions.TO_IMAGE }}

    - name: Checkout sources
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Update version
      run: |
        LAST_VERSION=$(git describe --tag --abbrev=0)
        LAST_MINOR_VERSION=${LAST_VERSION%.*}
        NEW_VERSION=${{ github.event.inputs.version }}
        NEW_MINOR_VERSION=${NEW_VERSION%.*}
        sed -i s/${LAST_VERSION}/${NEW_VERSION}/g readme.md Dockerfile alpine/Dockerfile
        sed -i s/${LAST_MINOR_VERSION}/${NEW_MINOR_VERSION}/g readme.md
        git config --local user.name "rodolpheche"
        git config --local user.email "rodolphe.chaigneau@gmail.com"
        git add .
        git commit -m "upgrade to version $LAST_VERSION"
        git tag ${LAST_VERSION}
        git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/rodolpheche/wiremock-docker.git
        git push origin main
        git push --tags

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
